#!/usr/bin/lua

-- This file converts ieee oui data from https://raw.githubusercontent.com/silverwind/oui-data/master/index.json
-- then converts it inta format suitable for use by arp-scan (get-oui is not available on openwrt)

local json = require("dkjson")

-- Read the JSON file
local json_file = io.open("index.json", "r")
local json_content = json_file:read("*all")
json_file:close()

-- Decode JSON to Lua table
local data = json.decode(json_content)

-- Add header to the text file
local text_file = io.open("ieee-oui.txt", "w")
local date_time = os.date("%Y/%m/%d %H:%M:%S", os.time())

text_file:write("# ieee-oui.txt -- Ethernet vendor OUI file for arp-scan\n")
text_file:write("#\n")
text_file:write("# This file contains the Ethernet vendor OUIs for arp-scan.  These are used\n")
text_file:write("# to determine the vendor for a give Ethernet interface given the MAC address.\n")
text_file:write("#\n")
text_file:write("# Each line of this file contains an OUI-vendor mapping in the form:\n")
text_file:write("#\n")
text_file:write("# <OUI><TAB><Vendor>\n")
text_file:write("#\n")
text_file:write("# Where <OUI> is the first three bytes of the MAC address in hex, and <Vendor>\n")
text_file:write("# is the name of the vendor.\n")
text_file:write("#\n")
text_file:write("# Blank lines and lines beginning with \"#\" are ignored.\n")
text_file:write("#\n")
text_file:write(string.format("# This file was automatically generated by convert-oui at %s\n", date_time))
text_file:write("# using data from https://raw.githubusercontent.com/silverwind/oui-data/master/index.json\n")
text_file:write("#\n")
text_file:write("# Do not edit this file.  If you want to add additional MAC-Vendor mappings,\n")
text_file:write("# edit the file mac-vendor.txt instead.\n")
text_file:write("#\n")

-- Extract and convert the actual data
for key, value in pairs(data) do
    -- Extract the Vendor before the newline (ignore the rest)
    local first_part = value:match("([^\n]+)")

    text_file:write(string.format('%s\t%s\n', key, first_part))
end
text_file:close()